input {
    file {
        path => "<<app_base_dir>>/logs/gc/gc.*"
        tags => [ "app_gc" ]
        start_position => "beginning"
    }
}
filter {
  grok {
    match => {
      "message" => "(?<logger_time>^[\[]{1}[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T(2[0-3]|[01][0-9]):[0-5][0-9]:[0-5][0-9].[0-9][0-9][0-9])"
    }
  }
  mutate {
    gsub => ["logger_time", "T", " "]
  }
}
output {
    if "app_gc" in [tags]{
        s3{
            # For example: <<s3_bucket_name>>  will be like  :  dummy-data-store
            bucket => "<<s3_bucket_name>>"
            size_file => 2097152
            prefix => "logs/gc/app/%{host}/"
            restore => true
            retry_delay => 20
            codec => line { format => "%{logger_time}] %{message}" }
            time_file => 2
            rotation_strategy => "size_and_time"
            # For example : <<app_base_dir>> will be like /home/app
            temporary_directory => "<<app_base_dir>>/tmp"
        }
    }
}
